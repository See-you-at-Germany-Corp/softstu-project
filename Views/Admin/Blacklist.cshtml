@using softstu_project.Models;
@{
    string[] transactionName = { "ยืม", "คืน", "สาย" };
}

<div class="blacklist-page-container">
    <div class="device-history-container">
        <h2>ประวัติการยืม/คืน อุปกรณ์ ล่าสุด</h2>
        <div class="filter-box">
            <select class="filter" id="blacklist-filter-input" onchange="onFilterChange()">
                <option value="0" disabled selected>กรองด้วย</option>
                <option value="0">ทั้งหมด</option>
                <option value="created">วันที่ดำเนินการ</option>
                <option value="book_date">วันที่จอง</option>
            </select>
            <input class="filter inputdate" id="blacklist-inputdate" type="date" onchange="onDateChange(onDateParams)">
        </div>
        <div class="device-history-table-container">
            <table class="device-history-table" id="blacklist-device-history-table">
                <thead>
                    <th>วันดำเนินการ</th>
                    <th>วันที่จอง</th>
                    <th>ประเภทการจอง</th>
                    <th>หมายเลขอุปกรณ์</th>
                    <th>รหัสผู้ใช้งาน</th>
                    <th>สถานะ</th>
                </thead>
                <tbody id="blacklist-log-tbody">
                    @foreach (var log in ViewData["LogLists"] as List<Log>)
                    {
                        <tr>
                            <td>@log.created.ToShortDateString()</td>
                            <td>@log.book_date.ToShortDateString()</td>
                            <td>@log.GetTimeName(log.time_id)</td>
                            <td>@log.item_id</td>
                            <td>@log.user_id</td>
                            <td>@transactionName[log.transaction_type]</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="device-blacklist-container">
        <h2>รายการอุปกรณ์ที่ยังไม่ได้คืน</h2>
        <div class="filter-box">
            <input class="filter inputdate" id="blacklist-itemid" type="text" placeholder="หมายเลขอุปกรณ์"
                onchange="onBlacklistFilterChange()">
            <input class="filter inputdate" id="blacklist-userid" type="text" placeholder="รหัสผู้ใช้งาน"
                onchange="onBlacklistFilterChange()">
        </div>
        <div class="device-blacklist-table-container">
            <form asp-controller="Admin" asp-action="OnDeleteTransaction" method="POST">
                <table class="device-blacklist-table" id="device-blacklist-table">
                    <thead>
                        <th>วันที่จอง</th>
                        <th>หมายเลขอุปกรณ์</th>
                        <th>ประเภทการจอง</th>
                        <th>รหัสผู้ใช้งาน</th>
                        <th>ยืนยันการคืน</th>
                    </thead>
                    <tbody id="blacklist-tbody">
                        @foreach (var transaction in ViewData["BlacklistLists"] as List<Transaction>)
                        {
                            <tr id="blacklist-@transaction.item_id">
                                <td>@transaction.book_date.ToShortDateString()</td>
                                <td>@transaction.item_id</td>
                                <td>@transaction.GetTimeName((int)transaction.time_id))</td>
                                <td>@transaction.user_id</td>
                                <td>
                                    <button class="ghost-button" name="transactionID" type="submit"
                                    value="@transaction.uuid">ยืนยัน</button>
                                </td>
                            </tr>
                            /// remove item from borrowLists here.
                            /// add item to Log here.
                        }
                    </tbody>
                </table>
            </form>
        </div>
    </div>
</div>

<script>
    const originTbody = document.querySelector("#blacklist-log-tbody");
    const trCollection = originTbody.getElementsByTagName("tr");
    const trLists = [...trCollection];

    const onDateParams = {
        inputdateID: "blacklist-inputdate",
        tableID: "blacklist-device-history-table",
        tbodyID: "blacklist-log-tbody",
        filterWith: "0",
        originTrLists: trLists,
        isFilter: false,
    };

    const originBlackListTbody = document.querySelector("#blacklist-tbody");
    const trBlackListCollection = originBlackListTbody.getElementsByTagName("tr");
    const trBlackListLists = [...trBlackListCollection];

    window.onload = () => {
        onDateLoad("blacklist-inputdate");
        onDateChange(onDateParams);
    };

    function onFilterChange() {
        const filter = document.querySelector(`#blacklist-filter-input`);
        const value = filter.value;

        if (value !== "0") {
            onDateParams.filterWith = value;
            onDateParams.isFilter = false;
        }
        else onDateParams.isFilter = true;

        onDateChange(onDateParams);
    }

    function onBlacklistFilterChange() {
        const item = document.querySelector("#blacklist-itemid");
        const user = document.querySelector("#blacklist-userid");
        const table = document.querySelector("#device-blacklist-table");
        const tbody = table.querySelector("#blacklist-tbody");

        const filteredTrLists = trBlackListLists.filter((tr) => {
            const tdLists = tr.getElementsByTagName("td");
            const tdItemID = tdLists[1].innerHTML;
            const tdUserID = tdLists[3].innerHTML;

            if (item.value) return item.value === tdItemID;
            if (user.value) return user.value === tdUserID;
            if (item.value && user.value) return item.value === tdItemID && user.value === tdUserID;
            else return true;
        });

        table.removeChild(tbody);

        const newTbody = document.createElement("tbody");
        newTbody.id = "blacklist-tbody";

        filteredTrLists.map((filtered) => {
            newTbody.appendChild(filtered);
        });

        table.append(newTbody);
    }
</script>