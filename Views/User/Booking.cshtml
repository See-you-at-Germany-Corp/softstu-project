@using softstu_project.Models;
@{
    var lab = ViewData["LabInfo"] as Laboratory;
    var itemSet = ViewData["LabItemSet"] as List<int>;

    var transactions = ViewData["LabTransactions"] as List<Transaction>;
}
<div class="booking-container">
    <div class="lab-header">@lab.name</div>
    <div class="form-container">
        <div class="input-form">
            <div class="input-container">
                <label for="">อุปกรณ์</label>
                <select name="" id="item-selector" onchange="selectItem()">
                    <option value="DUMMY" selected>เลือกอุปกรณ์</option>
                    @foreach (var index in itemSet)
                    {
                        <option value=@index>@((ItemTypes)index)</option>
                    }
                </select>
            </div>
            <div class="input-container">
                <label for="">วันที่</label>
                <input type="date" name="" id="date-selector" onchange="selectDate()" />
            </div>
            <div class="input-container">
                <label for="">จำนวน</label>
                <select name="" id="quantity-selector" onchange="setFormTimeSlot()">
                    <option value="DUMMY">เลือกจำนวนอุปกรณ์</option>
                </select>
            </div>
        </div>
        <div class="input-time-select">
            <label>ช่วงเวลาที่สามารถจองได้</label>
            <div class="radio-container" id="time-slot-selector">
                <input type="checkbox" name="time-selector" id="time-slot-1" value="1" onclick="enableButton()"
                    disabled>
                <label for="time-slot-1" class="radio-label">09:00 - 12:00</label>
                <input type="checkbox" name="time-selector" id="time-slot-2" value="2" onclick="enableButton()"
                    disabled>
                <label for="time-slot-2" class="radio-label">13:00 - 16:00</label>
            </div>
        </div>
        <button id="submit-btn" onclick="submitForm()" disabled>Submit</button>
    </div>

</div>
@section Scripts {
<script>
    const itemSelector = document.getElementById('item-selector');
    const dateSelector = document.getElementById('date-selector');
    const quantitySelector = document.getElementById('quantity-selector');
    const timeSlotSelector = document.getElementsByName('time-selector');

    let timeSlot = {
        am: 0,
        pm: 0
    };

    async function updateForm() {
        disableButton()
        clearItemQuantity()
        clearFormTimeSlot()

        timeSlot = await getItemTimeSlot()

        let { maxQuantity } = getMinMaxQuantity()

        if (maxQuantity === 0) {
            quantitySelector.options[0].text = "ไม่มีอุปกรณ์ว่าง";
            return
        }
        setQuantitySeletor(maxQuantity)
    }

    function selectItem() {
        if (dateSelector.value === "") return
        if (itemSelector.value === "DUMMY") {
            clearForm();
            return
        }

        updateForm()
    }

    function selectDate() {
        if (itemSelector.value === "DUMMY") return
        if (dateSelector.value === "") {
            clearForm();
            return
        }

        updateForm()
    }

    function getMinMaxQuantity() {
        let minQuantity, maxQuantity;

        if (timeSlot.am > timeSlot.pm) {
            minQuantity = timeSlot.pm
            maxQuantity = timeSlot.am
        } else {
            minQuantity = timeSlot.am
            maxQuantity = timeSlot.pm
        }

        return { minQuantity, maxQuantity }
    }

    function getItemTimeSlot() {
        const timestamp = Date.parse(dateSelector.value) / 1000
        return fetch(`/api/lab/quantity?labID=@lab.uuid&itemType=${itemSelector.value}&timestamp=${timestamp}`, {
            method: 'get',
            headers: {
                'Content-Type': 'application/json',
                Accept: 'application/json',
            }
        })
            .then(res => {
                return res.json()
            })
            .then(res => {
                return res
            })
            .catch(err => {
                console.log(err)
            })
    }

    function setFormTimeSlot() {
        let { minQuantity, maxQuantity } = getMinMaxQuantity()
        const timeSlot1 = timeSlotSelector[0];
        const timeSlot2 = timeSlotSelector[1];

        if (minQuantity !== maxQuantity && parseInt(quantitySelector.value) > minQuantity) {
            if (timeSlot.am > timeSlot.pm) {
                timeSlot1.disabled = false;
                timeSlot2.disabled = true;
            } else {
                timeSlot1.disabled = true;
                timeSlot2.disabled = false;
            }
        } else {
            timeSlot1.disabled = false;
            timeSlot2.disabled = false;
        }
    }

    function setQuantitySeletor(maxQuantity) {
        if (maxQuantity !== quantitySelector.childElementCount) {
            for (let i = 1; i <= maxQuantity; ++i) {
                quantitySelector.options.add(new Option(i, i));
            }
        }
    }

    function enableButton() {
        const btn = document.getElementById('submit-btn')

        const timeSlot1 = timeSlotSelector[0];
        const timeSlot2 = timeSlotSelector[1];

        if (!timeSlot1.checked && !timeSlot2.checked) {
            btn.disabled = true;
        } else {
            btn.disabled = false;
        }
    }

    function disableButton() {
        const btn = document.getElementById('submit-btn')

        btn.disabled = true;
    }

    function clearItemQuantity(dummy_text = "เลือกจำนวนอุปกรณ์") {
        quantitySelector.innerHTML = ""
        quantitySelector.options.add(new Option(dummy_text, "DUMMY"));
    }

    function clearFormTimeSlot() {
        timeSlotSelector[0].checked = false;
        timeSlotSelector[1].checked = false;
        timeSlotSelector[0].disabled = true;
        timeSlotSelector[1].disabled = true;
    }

    function submitForm() {
        const itemTypeID = itemSelector.value
        const bookDate = new Date(dateSelector.value)
        const quantity = quantitySelector.value
        const timeID =
            (timeSlotSelector[0].checked ? parseInt(timeSlotSelector[0].value) : 0) +
            (timeSlotSelector[1].checked ? parseInt(timeSlotSelector[1].value) : 0)

        bookItem(timeID, quantity, itemTypeID, bookDate)
    }

    function bookItem(time_id, quantity, item_type, book_date) {
        const formData = new FormData();
        formData.append('lab_id', @lab.uuid)
        formData.append('user_id', 1)
        formData.append('time_id', time_id)
        formData.append('quantity', quantity)
        formData.append('item_type', item_type)
        formData.append('book_date', book_date.toLocaleDateString())

        fetch(`/api/item/booking`, {
            method: 'post',
            body: formData
        })
            .then(res => {
                return res.json()
            })
    }
</script>
}